#!/usr/bin/env bash

#  https://github.com/thewoolleyman/boxbuilder
#  Copyright (c) 2010 Chad Woolley - The MIT License

boxbuilder_debug=${boxbuilder_debug:-false}

if [[ $boxbuilder_debug = true ]]; then
  export PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
  # set -o verbose # Comment for now, makes debugging too hard, needs to default to false and have flag: http://www.pivotaltracker.com/story/show/5430700
  set -o xtrace
fi

set -o errexit
set -o errtrace
set -o noclobber
set -o nounset
set -o pipefail

_log_prefix="BOXBUILDER - $BASH_SOURCE:"

function onexit() {
  local exit_status=${1:-$?}
  if [[ $exit_status != 0 ]]; then
    _error_line="error trapped."
  else
    _error_line=''
  fi
  if [[ $(declare -f onexit_hook) ]]; then
    onexit_hook
  fi
  echo "$_log_prefix $_error_line Exiting $0 with $exit_status"
  exit $exit_status
}

function disable_error_checking() {
  trap - ERR
  set +o errexit
}

function enable_error_checking() {
  trap onexit ERR
  set -o errexit
}

trap onexit HUP INT QUIT TERM ERR

assert_equal() {
  set +o nounset
  if [[ ! $1 = $2 ]]; then
    echo "Expected $2 to be equal to $1"
    echo "Failure at line, method, file:" $(caller 0)
    set -o nounset
    return 1
  fi
  set -o nounset
}

assert_match() {
  set +o nounset
  disable_error_checking
  echo $2 | grep -e $1
  if [[ ! $? = 0 ]]; then
    echo "Expected $2 to match $1"
    echo "Failure at line, method, file:" $(caller 0)
    set -o nounset
    return 1
  fi
  enable_error_checking
  set -o nounset
}
